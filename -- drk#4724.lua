--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.6) ~  Much Love, Ferib 

]]--

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==4) then v28=nil;function v28(...)return {...},v12("#",...);end v29=nil;function v29()local v31=0;local v32;local v33;local v34;local v35;local v36;local v37;local v38;local v39;while true do if (v31~=4) then else while true do if (v32==0) then local v87=0;while true do if (v87==(0 + 0)) then v33=739 -(159 + 580) ;v34=nil;v87=1 + 0 ;end if ((1 + 0)~=v87) then else v32=1677 -(730 + 946) ;break;end end end if (v32==(2 -1)) then local v88=0 + 0 ;while true do if (v88==1) then v32=1 + 1 ;break;end if (v88~=(0 -0)) then else v35=nil;v36=nil;v88=3 -2 ;end end end if (v32==(2 + 1)) then v39=nil;while true do local v90=0 -0 ;local v91;while true do if (v90==0) then v91=0 + 0 ;while true do if (v91~=0) then else local v110=0;local v111;while true do if ((1873 -(1868 + 5))==v110) then v111=0;while true do if (v111==(0 -0)) then if (v33~=0) then else local v118=0;while true do if (v118~=(1137 -(427 + 708))) then else v33=1;break;end if (v118==1) then local v122=0;while true do if (v122==(3 -2)) then v118=2 + 0 ;break;end if (v122==0) then v36={};v37={v34,v35,nil,v36};v122=1484 -(848 + 635) ;end end end if (v118==(838 -(397 + 441))) then v34={};v35={};v118=1;end end end if (v33==(2 -1)) then local v119=0;local v120;local v121;while true do if (v119~=0) then else v120=0 -0 ;v121=nil;v119=2 -1 ;end if ((2 -1)==v119) then while true do if (v120==0) then v121=0;while true do if (v121==(705 -(684 + 19))) then v33=2 + 0 ;break;end if (v121==1) then local v266=0;while true do if (v266==(1939 -(1916 + 23))) then for v304=1,v38 do local v305=780 -(419 + 361) ;local v306;local v307;local v308;while true do if (v305==1) then v308=nil;while true do if (v306==(2 -1)) then if (v307==1) then v308=v22()~=(605 -(381 + 224)) ;elseif (v307==(2 -0)) then v308=v25();elseif (v307==3) then v308=v26();end v39[v304]=v308;break;end if (v306~=0) then else local v377=0;while true do if (v377==(962 -(544 + 417))) then v306=1;break;end if (v377==0) then v307=v22();v308=nil;v377=1;end end end end break;end if ((0 -0)~=v305) then else local v346=0;while true do if (v346~=1) then else v305=1;break;end if (v346~=0) then else v306=0 -0 ;v307=nil;v346=1 + 0 ;end end end end end v37[3]=v22();v266=1;end if (v266~=(1 -0)) then else v121=2;break;end end end if (v121==(0 -0)) then v38=v24();v39={};v121=1;end end break;end end break;end end end v111=2 -1 ;end if (v111==1) then v91=2 -1 ;break;end end break;end end end if (v91==1) then if (v33==2) then local v112=0;local v113;while true do if (v112==(0 + 0)) then v113=0 + 0 ;while true do local v117=1030 -(675 + 355) ;while true do if (v117==(185 -(74 + 111))) then if (v113==(0 + 0)) then local v123=0;local v124;while true do if (v123~=(0 + 0)) then else v124=0 -0 ;while true do if (v124==1) then v113=1 + 0 ;break;end if (v124==0) then local v267=0 + 0 ;while true do if (v267==(1671 -(595 + 1075))) then v124=1;break;end if (0~=v267) then else for v309=1 + 0 ,v24() do local v310=0;local v311;local v312;while true do if (v310==(0 + 0)) then local v347=0;while true do if (v347~=0) then else local v378=0 -0 ;while true do if (v378~=(0 -0)) then else v311=0 -0 ;v312=nil;v378=1;end if (v378~=1) then else v347=1 + 0 ;break;end end end if ((1 -0)==v347) then v310=1;break;end end end if (v310==1) then while true do if ((0 -0)==v311) then v312=v22();if (v21(v312,2 -1 ,1)~=0) then else local v382=0;local v383;local v384;local v385;local v386;while true do if (v382==(0 + 0)) then local v413=0 + 0 ;local v414;while true do if (v413~=0) then else v414=0 -0 ;while true do if (v414~=(1538 -(823 + 715))) then else local v441=0;while true do if (v441==(3 -2)) then v414=1 + 0 ;break;end if (v441==0) then v383=0;v384=nil;v441=1675 -(863 + 811) ;end end end if (v414~=1) then else v382=1;break;end end break;end end end if (v382~=(1365 -(381 + 983))) then else local v415=0;local v416;while true do if (v415==(0 + 0)) then v416=0 -0 ;while true do if ((1 + 0)==v416) then v382=2;break;end if (0==v416) then local v442=0;while true do if (v442==(1417 -(117 + 1300))) then v385=nil;v386=nil;v442=1;end if (v442==(1 -0)) then v416=1486 -(732 + 753) ;break;end end end end break;end end end if (v382==(2 + 0)) then while true do if (v383~=2) then else local v422=0;local v423;while true do if (v422~=(78 -(54 + 24))) then else v423=0;while true do if (v423==(3 -2)) then v383=6 -3 ;break;end if (v423==(1269 -(167 + 1102))) then if (v21(v385,1 + 0 ,1)==(110 -(92 + 17))) then v386[2]=v39[v386[2]];end if (v21(v385,2,2)~=1) then else v386[3 + 0 ]=v39[v386[3]];end v423=1 + 0 ;end end break;end end end if (3~=v383) then else if (v21(v385,1080 -(903 + 174) ,1 + 2 )==1) then v386[4]=v39[v386[18 -14 ]];end v34[v309]=v386;break;end if ((225 -(108 + 117))==v383) then local v425=0;local v426;local v427;while true do if (v425==1) then while true do if ((0 -0)~=v426) then else v427=0 -0 ;while true do if (0==v427) then local v453=0;local v454;while true do if (v453==(0 -0)) then v454=0;while true do if (v454~=(1 + 0)) then else v427=1;break;end if (0==v454) then v384=v21(v312,368 -(104 + 262) ,8 -5 );v385=v21(v312,1 + 3 ,3 + 3 );v454=1443 -(390 + 1052) ;end end break;end end end if (v427==1) then v383=4 -3 ;break;end end break;end end break;end if (v425==(0 + 0)) then v426=0;v427=nil;v425=825 -(572 + 252) ;end end end if (v383==1) then local v428=0;local v429;while true do if (v428==0) then v429=0;while true do if (v429~=0) then else v386={v23(),v23(),nil,nil};if (v384==0) then local v451=0 + 0 ;local v452;while true do if (0==v451) then v452=0 -0 ;while true do if (v452==0) then v386[3]=v23();v386[4]=v23();break;end end break;end end elseif (v384==1) then v386[440 -(16 + 421) ]=v24();elseif (v384==(1943 -(376 + 1565))) then v386[125 -(31 + 91) ]=v24() -((749 -(60 + 687))^16) ;elseif (v384==(1 + 2)) then local v462=0;while true do if (v462==(0 -0)) then v386[3]=v24() -(2^16) ;v386[4]=v23();break;end end end v429=1 -0 ;end if (1~=v429) then else v383=446 -(158 + 286) ;break;end end break;end end end end break;end end end break;end end break;end end end for v313=1 + 0 ,v24() do v35[v313-(1166 -(97 + 1068)) ]=v29();end v267=1 + 0 ;end end end end break;end end end if (v113==(1 -0)) then local v125=0;local v126;while true do if (v125==(1498 -(681 + 817))) then v126=0;while true do if (v126~=(1772 -(1694 + 78))) then else local v268=0;while true do if (v268~=0) then else for v315=2 -1 ,v24() do v36[v315]=v24();end return v37;end end end end break;end end end break;end end end break;end end end break;end end break;end end end break;end if (v32~=(2 + 0)) then else local v89=0;while true do if (v89~=(1 -0)) then else v32=1635 -(83 + 1549) ;break;end if (v89==0) then v37=nil;v38=nil;v89=1799 -(1546 + 252) ;end end end end break;end if (v31==(1477 -(1157 + 317))) then local v76=0 -0 ;while true do if ((0 -0)==v76) then v38=nil;v39=nil;v76=1;end if (v76==1) then v31=4;break;end end end if (v31==0) then v32=0;v33=nil;v31=1 -0 ;end if (v31==2) then v36=nil;v37=nil;v31=3;end if (v31~=1) then else v34=nil;v35=nil;v31=2;end end end v18=5;end if (v18==3) then function v25()local v40=v24();local v41=v24();local v42=1 + 0 + 0 ;local v43=(v21(v41,(2 + 0) -1 ,11 + 9 ) * ((1602 -(99 + 1501))^32)) + v40 ;local v44=v21(v41,(801 -(325 + 435)) -20 ,104 -73 );local v45=((v21(v41,20 + 12 )==(1001 -(153 + 847))) and  -(1 + 0)) or (1 + 0) ;if (v44==(0 -0)) then if (v43==((1371 -(434 + 937)) -0)) then return v45 * (1485 -(334 + 1151)) ;else v44=1 + 0 ;v42=(0 + 0) -(0 + 0) ;end elseif (v44==(76 + 1971)) then return ((v43==(0 + 0)) and (v45 * ((1 + 0)/(1178 -(104 + 1074))))) or (v45 * NaN) ;end return v8(v45,v44-(1547 -(60 + 464)) ) * (v42 + (v43/(((438 + 331) -((196 -130) + 701))^52))) ;end v26=nil;function v26(v46)local v47;if  not v46 then local v70=789 -(187 + 602) ;while true do if (v70==((4927 -3359) -(886 + 682))) then v46=v24();if (v46==(0 + (0 -0))) then return "";end break;end end end v47=v3(v16,v19,(v19 + v46) -(1 + 0) );v19=v19 + v46 ;local v48={};for v68=1 -0 , #v47 do v48[v68]=v2(v1(v3(v47,v68,v68)));end return v6(v48);end v27=v24;v18=4;end if (0==v18) then v19=1;v20=nil;v16=v4(v3(v16,5),"..",function(v49)if (v1(v49,2)==79) then local v71=0;while true do if (v71==0) then v20=v0(v3(v49,1,1));return "";end end else local v72=v2(v0(v49,16));if v20 then local v80=v5(v72,v20);v20=nil;return v80;else return v72;end end end);v21=nil;v18=1;end if (v18==1) then function v21(v50,v51,v52)if v52 then local v73=0 + 0 ;local v74;while true do if (v73==(0 -0)) then v74=(v50/((1494 -(603 + 889))^(v51-1)))%((1830 -((4880 -3467) + 415))^(((v52-1) -(v51-(4 -(756 -(25 + 728))))) + 1)) ;return v74-(v74%(1 + 0)) ;end end else local v75=(953 -(530 + 421))^(v51-(1 + 0)) ;return (((v50%(v75 + v75))>=v75) and (1639 -(1201 + 437))) or 0 ;end end v22=nil;function v22()local v53=501 -(17 + (1393 -909)) ;local v54;while true do if ((1 + 0)==v53) then return v54;end if (v53==(471 -(443 + 28))) then v54=v1(v16,v19,v19);v19=v19 + (2 -1) ;v53=1248 -(115 + 1132) ;end end end v23=nil;v18=2;end if (2==v18) then function v23()local v55,v56=v1(v16,v19,v19 + (5 -3) );v19=v19 + 2 ;return (v56 * (416 -160)) + v55 ;end v24=nil;function v24()local v57,v58,v59,v60=v1(v16,v19,v19 + 2 + 1 );v19=v19 + (9 -5) ;return (v60 * (16777677 -(155 + (1603 -(998 + 299))))) + (v59 * (122542 -57006)) + (v58 * (777 -521)) + v57 ;end v25=nil;v18=3;end if (v18==5) then v30=nil;function v30(v61,v62,v63)local v64=0;local v65;local v66;local v67;while true do if (v64==0) then v65=v61[1];v66=v61[2];v64=1;end if (v64==1) then v67=v61[3];return function(...)local v81=0;local v82;local v83;local v84;local v85;local v86;while true do if (v81==2) then v86=nil;function v86()local v92=v65;local v93=v66;local v94=v67;local v95=v28;local v96={};local v97={};local v98={};for v102=0 -0 ,v85 do if ((v102>=v94) or ((3143 -(360 + 447))>2441)) then v96[v102-v94 ]=v84[v102 + 1 + 0 ];else v98[v102]=v84[v102 + 1 + (0 -0) ];end end local v99=(v85-v94) + (1 -0) ;local v100;local v101;while true do local v103=0 + 0 ;local v104;while true do if ((v103==(1941 -(808 + 1133))) or ((1273 + (3708 -(422 + 445)))<(4406 -(366 + 424)))) then v104=(142 + 123) -(251 + 14) ;while true do if (((4031 -(235 + 253))>=(2305 -(348 + 955))) and (v104==(0 -0))) then local v114=0;while true do if ((v114==(2 -1)) or ((2642 + 1 + 22)==(4658 -3355))) then v104=1792 -(798 + 993) ;break;end if ((v114==(947 -(738 + 209))) or ((3406 -1797)<(1231 -(847 + 19)))) then v100=v92[v82];v101=v100[(2 -1) + 0 ];v114=1 + 0 ;end end end if ((v104==(1 + 0)) or ((2788 -(56 + 184))<=((71 + 2723) -1157))) then if ((v101<=(2 + 24)) or (3951==(7855 -6238))) then if ((v101<=(32 -20)) or ((4959 -(429 + (509 -263)))<(1812 -486))) then if ((v101<=(1859 -(450 + 1404))) or ((53 + 4130)<(1459 -(73 + 164)))) then if (((5800 -(557 + 1051))>=(117 + 2983)) and (v101<=(872 -(326 + 544)))) then if (((157 + 526)<(3403 -(19 + 264))) and (v101<=0)) then v98[v100[(933 -(114 + 818)) + 1 ]]=v63[v100[1 + 2 ]];elseif ((v101>(1 + 0)) or ((2113 + 2180)==(2903 + 347))) then v98[v100[2 + 0 ]]=v98[v100[3 + 0 ]] * v100[1252 -(994 + 254) ] ;else v98[v100[3 -1 ]]=v98[v100[1 + 1 + 1 ]] -v98[v100[(1063 + 290) -(243 + 1106) ]] ;end elseif ((v101<=(1 + 2)) or ((3545 -(93 + 768))>=(5256 -(386 + 1413)))) then if ((v100[1 + 1 ]<v98[v100[4 + 0 ]]) or (((1430 + 1912) -(140 + 1381))>(20359 -15708))) then v82=v82 + 1 ;else v82=v100[1 + 2 ];end elseif (((6170 -(965 + 1020))>=(382 + 1103)) and (v101>(1 + 0 + 3))) then local v140=1709 -(911 + 798) ;local v141;local v142;local v143;while true do if ((v140==(141 -(14 + 13 + 114))) or ((5204 -(375 + (1019 -(220 + 204))))<((2476 + 1657) -3022))) then v141=(0 -0) + 0 ;v142=nil;v140=925 -(858 + 66) ;end if ((v140==(4 -(6 -3))) or ((8174 -(23316 -17319))<=(4730 -3055))) then v143=nil;while true do if (((832 -(1070 -518))<(7347 -5220)) and (v141==(0 + 0))) then local v279=0 + 0 ;while true do if ((v279==(1873 -(447 + 1426))) or ((2537 -1420)>(1949 + 1216 + 63))) then v142=0 -0 ;v143=nil;v279=1 + 0 ;end if ((v279==(1 + 0)) or ((346 + 2005)>=(1849 + 2534))) then v141=1 + 0 ;break;end end end if (((2 -1)==v141) or ((3502 + 1358)<=(12084 -7468))) then while true do if ((v142==((2443 -(613 + 1117)) -(542 + 171))) or ((4572 -1683)>=4458)) then v143=v100[2 + 0 ];v98[v143]=v98[v143](v13(v98,v143 + (4 -(3 + 0)) ,v83));break;end end break;end end break;end end else local v144=v100[6 -4 ];local v145=v100[4 + 0 ];local v146=v144 + ((6232 -4631) -(1471 + 128)) ;local v147={v98[v144](v98[v144 + (3 -(1322 -(1097 + 223))) ],v98[v146])};for v253=164 -(14 + 149) ,v145 do v98[v146 + v253 ]=v147[v253];end local v148=v147[1 + 0 ];if ((((6594 -(316 + 786)) -(101 + 682))>(2276 -(526 + 751))) and v148) then local v258=0 + 0 ;local v259;while true do if ((v258==0) or ((10557 -(2437 + 3765))<=(1006 + (2519 -1293)))) then v259=0;while true do if ((v259==(0 -0)) or ((302 + 3121)<=2471)) then v98[v146]=v148;v82=v100[3 + 0 ];break;end end break;end end else v82=v82 + (4 -3) ;end end elseif ((v101<=(19 -11)) or (((20149 -(487 + 1334)) -13384)<=((6284 -(545 + 24)) -(181 + 828)))) then if ((v101<=(21 -15)) or (((11234 -8501) -(1714 + (574 -(313 + 205))))>(5940 -(572 + 897)))) then if (((2291 + 311)<=(4449 -(1180 + 261))) and (v98[v100[2 + 0 ]]~=v100[3 + 1 ])) then v82=v82 + (2 -1) ;else v82=v100[1615 -(524 + 1088) ];end elseif ((v101==((6 + 8) -(262 -(23 + 232)))) or ((19 -7)>(470 + 1474))) then if ((v98[v100[4 -2 ]]==v98[v100[3 + 1 ]]) or ((4146 -((1750 -(548 + 398)) + 216))<=(700 + 394))) then v82=v82 + (1752 -(1463 + 288)) ;else v82=v100[(272 + 578) -((792 -(117 + 194)) + 366) ];end else v98[v100[9 -7 ]]={};end elseif ((v101<=10) or (((35145 -28016) -3329)==(4711 + 11))) then if (((2390 -(925 + 970))<(3023 -(918 + 742))) and (v101>(1223 -(502 + (2331 -1619))))) then local v151=0 + 0 ;local v152;local v153;local v154;while true do if (((1907 -848)<=(6235 -(529 + 1164))) and (v151==(0 + 0))) then v152=0 + (0 -0) ;v153=nil;v151=1 + 0 ;end if ((v151==(1 + (1689 -(582 + 1107)))) or ((949 + 45 + 51)>=(1543 -(206 + 85)))) then v154=nil;while true do if ((v152==(0 + 0)) or ((270 + 385)>1554)) then local v280=0 + 0 ;while true do if ((v280==(497 -(102 + 395))) or ((3638 -((1747 -(1387 + 244)) + 1218))<((1370 -(589 + 88)) -(134 + 38)))) then v153=0 -0 ;v154=nil;v280=631 -(598 + 32) ;end if ((v280==(1 + 0)) or (((969 -(21 + 943)) + 843)>((5243 -(435 + 1354)) -2241))) then v152=1922 -(1488 + 433) ;break;end end end if (((5138 -3052)==(1394 + 692)) and (v152==(164 -(45 + (304 -186))))) then while true do if ((v153==(910 -(54 + 181 + 675))) or ((2330 -(23 + 191))>=(3954 -(56 + 50 + 1499)))) then v154=v100[1905 -(981 + 922) ];v98[v154](v98[v154 + (1 -0) ]);break;end end break;end end break;end end else local v155=0 + 0 ;local v156;local v157;local v158;local v159;local v160;while true do if (((289 + 591)<=(55 + 3840)) and ((1 + 1)==v155)) then v160=nil;while true do if (((6037 -(887 + 287))>=(9104 -4967)) and (v156==(299 -(97 + 200)))) then while true do if ((v157==(1 -0)) or ((1062 + 2934)<=(656 + 225))) then local v328=1506 -(1199 + 307) ;while true do if ((v328==(1525 -(451 + 1073))) or ((772 -542)>(2392 + (1812 -(827 + 746))))) then v157=(567 + 702) -(397 + 870) ;break;end if (((4145 -(241 + 704))>=(1432 + 1625)) and (v328==(0 -0))) then local v370=792 -(701 + 91) ;while true do if ((v370==(1 + 0)) or ((5098 -(523 + 1334))>(3033 + 248))) then v328=1 + 0 ;break;end if (((11249 -(3918 + 3002))>(4382 -(90 + 279))) and (v370==(0 + 0))) then v160={};v159=v10({},{__index=function(v393,v394)local v395=0 + 0 + 0 ;local v396;while true do if (((339 + 745)<(5179 -1878)) and (v395==(0 -0))) then local v417=0 -0 ;while true do if ((v417==(0 -(0 + 0))) or ((2462 -1100)==(6105 -4620))) then v396=v160[v394];return v396[1 + 0 ][v396[(2764 -1523) -(321 + 918) ]];end end end end end,__newindex=function(v397,v398,v399)local v400=0 + 0 ;local v401;local v402;while true do if ((v400==(798 -(623 + 174))) or ((1546 + 881)<=(6148 -4078))) then while true do if ((v401==(591 -(369 + 222))) or ((3999 -766)>(4434 -(174 + 721)))) then v402=v160[v398];v402[1190 -(791 + 398) ][v402[1 + (1 -0) ]]=v399;break;end end break;end if ((4487==(11422 -6935)) and (v400==(0 + 0))) then v401=1676 -(1090 + 586) ;v402=nil;v400=1 + 0 ;end end end});v370=112 -(86 + 25) ;end end end end end if (((2506 -1726)<(3331 -((1210 -(327 + 787)) + 1638))) and (v157==(684 -(125 + 557)))) then for v348=744 -(610 + 133) ,v100[1397 -(70 + 1323) ] do local v349=0 + 0 ;local v350;local v351;local v352;while true do if ((v349==(0 -0)) or ((863 -(82 + 18 + (820 -508)))>(3487 + 281))) then v350=0 -0 ;v351=nil;v349=1 + 0 ;end if (((2225 + (6838 -4926))==(18121 -13984)) and (v349==(1 + 0 + 0))) then v352=nil;while true do if (((1115 + 2059)<=(4870 -1477)) and (v350==(0 + 0))) then local v403=0 + 0 ;while true do if (((5783 -(623 + 364 + 53))>(559 + 1727)) and ((0 + 0)==v403)) then v351=0;v352=nil;v403=1;end if (((6019 -1572)>=(5849 -3538)) and (v403==(1 + 0))) then v350=70 -(21 + 48) ;break;end end end if (((17439 -12780)==(3884 + 775)) and (v350==(2 -(388 -(233 + 154))))) then while true do if ((3318>=(7256 -4554)) and (v351==(276 -(254 + 21)))) then if ((((2806 + 798) -(879 + 643))>=(240 -190)) and (v352[1545 -(570 + 974) ]==(129 -95))) then v160[v348-(2 -(1 -0)) ]={v98,v352[(49 + 667) -(98 + 615) ]};else v160[v348-(2 -1) ]={v62,v352[5 -2 ]};end v97[ #v97 + (411 -(154 + 256)) ]=v160;break;end if ((v351==(0 + 0)) or ((10113 -6245)<((1075 -(255 + 721)) + 27))) then local v419=1580 -(480 + 1100) ;while true do if ((v419==(0 -0)) or ((390 + (2290 -(945 + 266)))>(5319 -(988 + 728)))) then local v435=642 -(341 + 301) ;while true do if ((v435==((2568 -(826 + 1093)) -(220 + 428))) or (((1737 -(1567 + 92)) + 13)==(2341 -1047))) then v419=583 -(82 + 500) ;break;end if (((94 -(86 + 6 + 2))==v435) or ((598 + 686)>=(13352 -8950))) then v82=v82 + 1 + 0 + 0 ;v352=v92[v82];v435=3 -2 ;end end end if (((10949 -8759)<=(3714 + 360)) and (v419==(1 + 0))) then v351=104 -(45 + (199 -(19 + 122))) ;break;end end end end break;end end break;end end end v98[v100[39 -((12 -8) + 33) ]]=v30(v158,v159,v63);break;end if ((v157==(0 -0)) or ((5524 -(266 + 525))<=(1663 + 20))) then local v330=1353 -(782 + 571) ;while true do if (((1651 -(21 + 1071))<=(4552 -1220)) and ((1 + 0)==v330)) then v157=1090 -(26 + 1063) ;break;end if (((1424 -(969 + 60))<=(4731 -((2580 -(1319 + 68)) + 156))) and (v330==(0 -0))) then local v371=0;while true do if ((v371==(964 -(341 + 622))) or ((465 + 884)>(4465 -(598 + 1377)))) then v330=1612 -(185 + 1426) ;break;end if ((v371==(0 -0)) or ((3464 + 542)==(2084 -(373 + 1137)))) then v158=v93[v100[383 -((1425 -(602 + 687)) + 244) ]];v159=nil;v371=1 -(923 -(17 + 906)) ;end end end end end end break;end if (((2510 + 497)==((761 + 2737) -(50 + 441))) and (v156==1)) then v159=nil;v160=nil;v156=1 + 1 ;end if ((v156==(0 + 0)) or ((378 + 147)<=(1134 -626))) then local v281=1613 -(1477 + 136) ;while true do if (((0 -0)==v281) or ((2043 -(901 + (1011 -743)))>=(11880 -7742))) then v157=1962 -(86 + 1876) ;v158=nil;v281=241 -(142 + 98) ;end if (((13024 -8271)==(9180 -4427)) and (v281==(132 -(53 + 78)))) then v156=1 + 0 ;break;end end end end break;end if ((v155==((0 -0) + 0)) or ((5737 -2378)<=(3280 -(87 + 29)))) then v156=0 + 0 ;v157=nil;v155=1 + 0 ;end if (((2521 -(222 + 1403))<(1774 + 1284)) and ((1 + 0)==v155)) then v158=nil;v159=nil;v155=1767 -(945 + 820) ;end end end elseif (((967 -(41 + 14))>(1855 -(621 + 1206))) and (v101>(300 -(11 + 278)))) then for v256=v100[1532 -(49 + 1413 + 68) ],v100[3 + 0 ] do v98[v256]=nil;end else v98[v100[917 -(78 + 837) ]]=v98[v100[9 -6 ]][v100[4 + 0 ]];end elseif (((274 + 1365)>=(4504 -3040)) and (v101<=(1512 -(307 + 1186)))) then if ((v101<=(6 + 9)) or ((1890 -817)>(5148 -(324 + 21)))) then if ((v101<=(5 + 8)) or ((2853 -(271 + 43))<(3254 -1464))) then v98[v100[7 -5 ]][v100[3 + 0 + 0 ]]=v98[v100[4]];elseif ((((1321 + 526) -(1678 + 79))<=(2677 + (1599 -(91 + 214)))) and (v101>(1625 -((2873 -1779) + 279 + 238)))) then local v163=0 + 0 ;local v164;local v165;while true do if ((v163==(1738 -(919 + 818))) or ((44 + 2428)>=(630 + 2956))) then while true do if ((v164==(0 -0)) or ((6451 -3186)==(3476 + 1416))) then v165=v98[v100[821 -(777 + 40) ]];if (((9011 -4699)<=(13348 -8706)) and  not v165) then v82=v82 + 1 + 0 ;else local v324=0 -0 ;while true do if (((3231 -(115 + 1653))<=(370 + 2129)) and (v324==(0 -0))) then v98[v100[(1434 -(1190 + 243)) + (1755 -(1334 + 420)) ]]=v165;v82=v100[1 + 2 ];break;end end end break;end end break;end if (((249 + (2358 -1742))<=(3416 -(772 + 291))) and (v163==(0 + 0))) then v164=1930 -(1347 + 583) ;v165=nil;v163=(11 + 14) -(9 + 2 + 13) ;end end else v98[v100[2 + 0 ]]=v100[729 -(224 + 502) ];end elseif (((2345 + 674)>=(896 -(189 + 190))) and (v101<=(959 -(668 + 274)))) then if (((2302 + 2644)>=(1249 + 457)) and (v101==(1924 -((3317 -1936) + 527)))) then local v168=0 + 0 ;local v169;local v170;local v171;local v172;local v173;while true do if ((v168==((3 + 0) -1)) or ((5763 -(1033 + 790))<=(2832 + 134))) then v173=nil;while true do if ((v169==(2 -1)) or ((7318 -4563)<=(2842 -1714))) then local v283=0;while true do if (((2035 -1289)<(6413 -3309)) and (v283==(0 -0))) then v172=nil;v173=nil;v283=2 -1 ;end if (((13965 -9446)>(2119 + 1931)) and ((1621 -(439 + 1181))==v283)) then v169=2 + 0 ;break;end end end if (((4932 -(600 + (913 -610)))==(5126 -(495 + 602))) and (v169==((412 + 561) -(107 + 864)))) then while true do if ((v170==(0 -0)) or (((1546 + 1698) -(17 + 651))<(2767 -2053))) then local v331=0 + 0 ;while true do if ((v331==(1248 -(434 + (2474 -1660)))) or (3764<(3560 -(481 + 71)))) then local v372=0 + 0 ;while true do if (((1033 + 1127)>=(1318 -820)) and (v372==(243 -(224 + 18)))) then v331=1020 -((337 -235) + 917) ;break;end if ((v372==(0 -0)) or ((450 + 2714 + 1613)<=(2828 -(70 + 565)))) then v171=v100[2 -0 ];v172={v98[v171](v13(v98,v171 + 1 + 0 ,v83))};v372=(942 -(155 + 786)) + 0 ;end end end if ((((104 -(25 + 77)) -1)==v331) or ((4228 -2467)==(4667 -(169 + 1004)))) then v170=1 + 0 ;break;end end end if ((v170==(1372 -(444 + 927))) or ((3807 -(101 + 69))<((4913 -2840) + 36))) then v173=(1094 -(832 + 262)) -0 ;for v353=v171,v100[(6 + 0) -2 ] do local v354=0 + 0 ;local v355;while true do if ((v354==(0 + 0)) or ((3873 -1640)<=(2567 -(689 + 170)))) then v355=1491 -((3877 -2412) + 26) ;while true do if (((9570 -6604)>(9732 -7432)) and (v355==(0 + 0))) then v173=v173 + (1 -0) ;v98[v353]=v172[v173];break;end end break;end end end break;end end break;end if ((v169==(553 -(363 + 190))) or ((6733 -4268)==(5651 -(717 + 886)))) then v170=877 -((2659 -(750 + 1053)) + 21) ;v171=nil;v169=289 -(126 + 162) ;end end break;end if ((v168==(4 -3)) or ((189 -105)>(2615 -1687))) then v171=nil;v172=nil;v168=6 -4 ;end if (((175 -(16 + (1405 -(59 + 1187))))==v168) or ((3902 -2592)>3383)) then v169=0 -0 ;v170=nil;v168=680 -(130 + (997 -(243 + 205))) ;end end else local v174=821 -(112 + 709) ;local v175;local v176;local v177;while true do if ((v174==(1761 -(143 + (4687 -3069)))) or ((6167 -4672)>(156 + (5091 -2359)))) then v175=0 + 0 ;v176=nil;v174=1 + 0 ;end if (((3935 -(4 + 3 + 4))>(1797 + 1774)) and (v174==(1 -0))) then v177=nil;while true do if ((v175==(1 + 0)) or ((5612 -2442)>=(990 + 3750))) then while true do if (((11397 -7061)>=(4650 -(460 + (1020 -764)))) and ((0 + 0)==v176)) then v177=v100[2 + 0 ];v98[v177]=v98[v177](v98[v177 + 1 + 0 ]);break;end end break;end if (((5669 -(85 + 127 + 602))>(220 + 2618)) and (v175==(0 -0))) then v176=0 + 0 ;v177=nil;v175=3 -(5 -3) ;end end break;end end end elseif (((22044 -17411)>=(1195 + 217)) and (v101==(18 + 0))) then if (((2638 -1001)>(2154 -878)) and v98[v100[2 + 0 ]]) then v82=v82 + (1654 -(951 + 702)) ;else v82=v100[1247 -(14 + 1230) ];end else v82=v100[2 + 1 ];end elseif ((v101<=(37 -(300 -(228 + 57)))) or ((8258 -4693)<((6299 -(1406 + 234)) -2812))) then if (((3691 -(30 + 241))<=(3914 + 370)) and (v101<=(12 + 8))) then v63[v100[5 -2 ]]=v98[v100[1 + 0 + 1 ]];elseif ((v101==(18 + (532 -(356 + 173)))) or ((6443 -(937 + 1017))==(169 + 207))) then local v179=0 + 0 ;local v180;local v181;local v182;while true do if ((1590<=(7227 -3358)) and (v179==(0 -0))) then local v269=0 -0 ;while true do if ((v269==(964 -(648 + 316))) or ((1289 + 1436)<=(5905 -3730))) then v180=0 + 0 ;v181=nil;v269=1008 -((396 -(34 + 13)) + 658) ;end if ((v269==1) or ((7144 -3282)<(8809 -5164))) then v179=2 -1 ;break;end end end if ((v179==1) or ((2855 -(34 + 413))>=(7826 -4942))) then v182=nil;while true do if ((v180==(1 -0)) or ((3804 -(27 + 834))<(670 + 49))) then v98[v181 + (1156 -(486 + 669)) ]=v182;v98[v181]=v182[v100[1 + 3 ]];break;end if ((v180==(0 + 0)) or ((1615 + 420)<(506 -280))) then local v287=(3293 -1956) -(606 + 731) ;local v288;while true do if ((v287==(0 + 0)) or ((969 + 21)>(12247 -8116))) then v288=1387 -(1173 + 214) ;while true do if ((v288==(1 -0)) or ((928 + 567)==(5116 -(529 + 180)))) then v180=(2 + 0) -1 ;break;end if ((v288==(518 -(63 + 455))) or ((413 + 2374)==(178 + 236 + 369))) then local v373=386 -(352 + 34) ;while true do if (((2009 -(44 + 116 + 89))==1760) and (v373==(816 -(363 + 327 + (1324 -(1042 + 156)))))) then v181=v100[2];v182=v98[v100[3 + 0 ]];v373=1 + 0 ;end if ((((3415 -(780 + 904)) + 1164)<(3240 + 1156)) and ((1 + 0)==v373)) then v288=1 + 0 + 0 ;break;end end end end break;end end end end break;end end else local v183=240 -(20 + 220) ;local v184;local v185;local v186;while true do if ((((13 + 1527) -(700 + 840))==v183) or ((5315 -(1537 + 318))>(14834 -10593))) then local v270=0 -0 ;while true do if (((2424 -(89 + 1687))<2893) and (v270==(1 + 0))) then v183=2 -1 ;break;end if (((1879 + 2580)==(8337 -3878)) and (v270==(0 + 0))) then v184=v100[7 -5 ];v185={v98[v184](v98[v184 + 1 + 0 ])};v270=1 -0 ;end end end if ((v183==(2 -1)) or ((772 + 4082)<(10000 -6386))) then v186=0;for v274=v184,v100[5 -1 ] do local v275=0 + 0 ;local v276;while true do if (((52 + 155)<=(8040 -(1692 + 3687))) and (v275==(1646 -(1176 + 470)))) then v276=0 -0 ;while true do if (((526 + 579)==1105) and (v276==(1483 -(286 + 393 + 804)))) then v186=v186 + (184 -(102 + 43 + 38)) ;v98[v274]=v185[v186];break;end end break;end end end break;end end end elseif ((v101<=(49 -25)) or ((1183 + 2820)<(5280 -(315 + 1567)))) then if ((v101==((224 + 827) -(557 + 471))) or (1055<=(7 + 723))) then local v187=1328 -(904 + 277 + 147) ;local v188;while true do if ((v187==(683 -(4 + 679))) or ((5203 -3160)<(494 + 1044))) then v188=v100[2 + 0 ];do return v98[v188](v13(v98,v188 + (2 -1) ,v100[2 + (4 -3) ]));end break;end end else v62[v100[4 -1 ]]=v98[v100[293 -(38 + 253) ]];end elseif ((v101==(19 + 6)) or (3035<(232 + 2023))) then do return v98[v100[2 -0 ]];end else v98[v100[5 -3 ]]=v98[v100[1450 -(615 + 832) ]] + v98[v100[8 -4 ]] ;end elseif ((((20640 -13824) -3414)>=(2264 -(429 + (1101 -380)))) and (v101<=(6 + (1829 -(1674 + 121))))) then if (((3345 + 1606)==(5037 -((1323 -(112 + 1154)) + (111 -82)))) and (v101<=(1090 -(702 + 355)))) then if (((2371 -(467 + 755 + 733))<(5898 -(8 + 1587))) and (v101<=(18 + 11))) then if ((v101<=(102 -75)) or ((60 + (663 -(52 + 462)))>((3272 -(290 + 1424)) -618))) then v98[v100[4 -2 ]]=v98[v100[1350 -(482 + 865) ]] * v98[v100[1 + 3 ]] ;elseif ((v101>28) or ((1871 + 2816)<(13772 -9945))) then local v192=0 + 0 ;local v193;local v194;local v195;while true do if ((v192==1) or ((6510 -3293)<(259 + 783))) then v195=nil;while true do if (((1488 + 190)>(1141 -(206 + 173))) and (v193==(0 -0))) then local v290=1940 -(1339 + 601) ;while true do if ((v290==(0 -0)) or ((904 + 615)>(3137 -(980 + 462)))) then v194=0 -0 ;v195=nil;v290=1 + 0 ;end if ((v290==(1 + 0)) or ((6754 -3242)<=(3578 -(804 + 561)))) then v193=1 + 0 ;break;end end end if (((1370 + 1322)>=(800 + 778)) and (v193==(1 + (0 -0)))) then while true do if (((3667 -2121)>=(1557 -(257 + 927))) and (v194==(1017 -((2104 -(758 + 691)) + 362)))) then v195=v100[266 -(43 + 201 + 20) ];v98[v195](v13(v98,v195 + 1 + 0 ,v100[7 -4 ]));break;end end break;end end break;end if (((1630 + 42)>=(2269 -(851 + (2172 -1627)))) and (v192==(1017 -((1135 -(48 + 131)) + 61)))) then v193=0;v194=nil;v192=3 -2 ;end end else local v196=813 -((611 -(15 + 36)) + 253) ;local v197;local v198;local v199;local v200;local v201;local v202;while true do if ((v196==(5 -3)) or ((86 + 4504)<(124 + 4326))) then v201=nil;v202=nil;v196=3 -(1315 -(506 + 809)) ;end if (((15621 -12298)>=(4806 -(1169 + 723))) and (v196==((737 -(25 + 3)) -(142 + 566)))) then v199=nil;v200=nil;v196=1063 -(992 + 69) ;end if ((v196==(7 -4)) or ((3761 -(215 + 43))>=3856)) then while true do if (((706 -273)==(1261 -828)) and (v197==(749 -(531 + 216)))) then v202=nil;while true do if ((v198==(0 + 0)) or (((768 + 3499) -(332 + (1929 -(449 + 615))))>=(5297 -(420 + (2138 -1304))))) then local v335=0 + 0 ;while true do if (((2720 -1446)<(14820 -(5838 + 4126))) and (v335==(1 + 0 + 0))) then v198=2 -1 ;break;end if ((v335==(1027 -(548 + 479))) or ((230 + 228)<=213)) then local v374=1503 -(1006 + 497) ;while true do if (((2319 -(88 + 1282))<=(1475 + 272)) and (v374==(809 -(649 + 160)))) then v199=v100[2 + 0 ];v200,v201=v95(v98[v199](v98[v199 + 1 + 0 ]));v374=1959 -(1891 + 67) ;end if ((v374==(2 -1)) or ((62 + 103)>=((805 -600) + (6006 -1515)))) then v335=985 -(182 + 802) ;break;end end end end end if (((2923 + 926)>=(9621 -6592)) and (v198==(1 + 1))) then for v358=v199,v83 do local v359=0;local v360;local v361;while true do if ((v359==(0 + 0)) or ((3164 -(272 + 103 + 24))>(7666 -4631))) then v360=277 -(54 + 223) ;v361=nil;v359=4 -3 ;end if ((v359==(2 -1)) or ((4672 -((1685 -(21 + 94)) + 197))<(3158 -(74 + 337)))) then while true do if ((v360==(1510 -(1146 + 364))) or ((5111 -(651 + 396))<527)) then v361=70 -(2 + 3 + 65) ;while true do if ((v361==(0 + 0)) or (668>=(1470 -(6 + (270 -201))))) then v202=v202 + 1 + 0 ;v98[v358]=v200[v202];break;end end break;end end break;end end end break;end if (((2546 -(243 + 1248))<=(2085 + 714)) and (v198==(399 -(231 + 167)))) then local v336=0 + 0 + 0 + 0 ;while true do if (((531 + 562)==(1357 -(16 + (1020 -(233 + 539))))) and ((968 -(600 + 21 + 346))==v336)) then v198=2 + 0 ;break;end if (((0 + 0)==v336) or ((1275 -(346 + 415))==(5136 -(1475 + 133)))) then local v375=0 + 0 ;while true do if ((v375==(1 -0)) or ((729 + 233 + 3276)==(81 + 198))) then v336=1 -0 ;break;end if (((378 + (4414 -1202))==(2368 + 1222)) and (v375==((670 -(68 + 146)) -(238 + 218)))) then v83=(v201 + v199) -(1 + 0) ;v202=0 -0 ;v375=971 -(196 + 774) ;end end end end end end break;end if ((v197==(1238 -(1221 + 17))) or ((1536 + 135)>=(5812 -1355))) then local v291=0 -0 ;while true do if (((2959 -(121 + 72 + 729))<=(9815 -6447)) and (v291==(1 + 0))) then v197=267 -(242 + 24) ;break;end if ((v291==((0 -0) + 0)) or ((1677 -(87 + 6 + 8))<(6104 -4822))) then v198=167 -(105 + 62) ;v199=nil;v291=2 -1 ;end end end if ((v197==(1688 -(428 + 1259))) or ((3057 + 1751)<=(5294 -(221 + 1337)))) then local v292=0 -0 ;while true do if (((0 + 0)==v292) or ((2955 -(1214 + 89))>=(7977 -3267))) then v200=nil;v201=nil;v292=168 -(103 + 64) ;end if ((v292==(1 + 0)) or ((1080 + 174)>=(1398 -(45 + 8)))) then v197=6 -4 ;break;end end end end break;end if (((1803 + 1685)<=(10738 -6788)) and (v196==(0 + 0))) then v197=0 + 0 ;v198=nil;v196=2 -(1 + 0) ;end end end elseif ((v101<=(22 + 9)) or ((891 + 1621)>=(17675 -13327))) then if ((v101==(29 + 1)) or ((61 + 47)>(132 + 3))) then v98[v100[2]]=v98[v100[1 + 2 ]]/v100[766 -(644 + 118) ] ;elseif ((v98[v100[2 -0 ]]==v100[1347 -(1115 + 228) ]) or ((1229 + 2290)==116)) then v82=v82 + (1 -0) ;else v82=v100[1 + (3 -1) ];end elseif (((639 + 3051)==(1004 + 2686)) and (v101>(93 -61))) then do return;end else local v204=234 -(223 + 11) ;local v205;local v206;while true do if ((((5607 -(259 + 1661)) -((1105 -539) + 478))>(2841 -(676 + 321))) and (v204==(1 + 0))) then while true do if ((v205==(0 + 0)) or ((4304 -2729)==(4438 -(1223 + 164)))) then v206=v100[1 + 1 ];do return v13(v98,v206,v83);end break;end end break;end if (((1154 + 895)<=(917 + 1143)) and (v204==(0 + 0))) then v205=0 + 0 ;v206=nil;v204=1998 -(266 + 1731) ;end end end elseif ((v101<=(11 + 25)) or ((1682 -(105 + 1124))>=(665 + 325))) then if (((4429 -(89 + 620 + 62))>(4604 -(596 + 436))) and (v101<=(89 -55))) then v98[v100[2 + 0 ]]=v98[v100[5 -2 ]];elseif (((3056 -(798 + 745))>(2741 -(1041 + 235))) and (v101>(1951 -(1688 + 228)))) then local v207=0 -0 ;local v208;local v209;local v210;while true do if ((v207==0) or ((1392 + 1091)>=(1022 + 3233))) then v208=0 + 0 ;v209=nil;v207=1 + 0 ;end if ((v207==(2 -1)) or (((617 -(92 + 169)) + 86 + 143)>(2944 -((1036 -(76 + 299)) + 559)))) then v210=nil;while true do if ((((6866 -(236 + 135)) -(4337 -(478 + 654)))<=(2769 + 2026)) and (v208==((378 -255) -(35 + 88)))) then v209=0 + 0 ;v210=nil;v208=1 + 0 ;end if ((v208==(1 -0)) or ((2737 -(273 + 518))==(4040 -(1233 + 120)))) then while true do if ((((0 -0) + 0)==v209) or ((4996 -(1145 + 529))>=(6215 -(265 + (3818 -2674))))) then v210=v100[8 -(5 + 1) ];do return v98[v210](v13(v98,v210 + 1 + 0 ,v83));end break;end end break;end end break;end end else local v211=0 + 0 ;local v212;local v213;local v214;while true do if (((1035 -(41 + 993))==v211) or ((4339 -(369 + 793))>(2918 + 513))) then v214=nil;while true do if ((v212==1) or ((8347 -4371)<(1390 + 1283))) then while true do if (((3400 + 418)>(5666 -4501)) and (v213==(0 + (0 -0)))) then v214=v100[1 + 1 ];v98[v214]=v98[v214](v13(v98,v214 + 1 + 0 ,v100[3 + 0 ]));break;end end break;end if ((v212==(0 -0)) or ((5657 -(1047 + 385))<=(6576 -4006))) then local v294=1586 -(692 + 588 + 306) ;while true do if (((4717 -(121 + 46))>(6331 -3676)) and (v294==((62 -(15 + 47)) -0))) then v213=0 + 0 + 0 ;v214=nil;v294=1 + (0 -0) ;end if ((v294==(2 -(1 + 0))) or ((1 + 0)>=(7236 -5310))) then v212=1 + 0 ;break;end end end end break;end if ((v211==(0 -0)) or ((5965 -(760 + 366))<(1340 + 644))) then v212=0 + 0 ;v213=nil;v211=20 -(18 + 1) ;end end end elseif ((v101<=(1843 -(1684 + 121))) or ((1419 -899)>(3143 -(168 + 28)))) then if (((4283 -(65 + 570 + 66))>(3490 -2454)) and (v101==(10 + 27))) then if (((2543 -((271 -208) + 102))<=(6895 -3836)) and (v100[6 -4 ]==v98[v100[(128 + 56) -(169 + 11) ]])) then v82=v82 + (2 -(1 + 0)) ;else v82=v100[6 -(1379 -(960 + 416)) ];end else local v215=1202 -(529 + 673) ;local v216;local v217;local v218;local v219;local v220;while true do if (((366 + 666)<=(1340 + 733)) and (v215==(20 -(16 + 2 + 0)))) then v220=nil;while true do if ((v216==(0 -0)) or ((3916 -((755 -(638 + 55)) + 288))<(3883 -(55 + 504)))) then v217=v100[2 + 0 ];v218,v219=v95(v98[v217](v13(v98,v217 + (655 -(214 + 440)) ,v100[3 + 0 ])));v216=1 + 0 ;end if (((3626 -(7620 -5548))<=((6956 -(510 + 1334)) -(69 + 77))) and (v216==(2 + 0))) then for v317=v217,v83 do local v318=1076 -(813 + 263) ;while true do if (((105 + 2627)==(4647 -(1087 + 828))) and (v318==((3226 -2383) -(8 + 835)))) then v220=v220 + (2 -1) ;v98[v317]=v218[v220];break;end end end break;end if (((5762 -(1095 + 673))>(5636 -(577 + 1397))) and (v216==(2 -1))) then local v296=1283 -(978 + 305) ;while true do if (((6092 -(805 + 745))>(195 -153)) and (v296==(0 + 0))) then v83=(v219 + v217) -1 ;v220=0 -(0 + 0) ;v296=1 + 0 ;end if (((8116 -3885)>=((14345 -(331 + 1090)) -10018)) and (v296==(2 -1))) then v216=788 -(350 + 436) ;break;end end end end break;end if (((2958 -(548 + (1053 -437)))<(2047 + 1121)) and (v215==((1703 -(22 + 640)) -((1236 -621) + 425)))) then v218=nil;v219=nil;v215=1091 -(777 + 312) ;end if (((261 + 1582)==(2045 -(200 + (3 -1)))) and (v215==((2396 -(130 + 305)) -(690 + 1271)))) then v216=0 -0 ;v217=nil;v215=1963 -(1753 + 209) ;end end end elseif ((v101==(1899 -(1496 + 364))) or ((964 + 228)>(446 + 2647))) then v98[v100[2]]=v100[11 -8 ]~=(0 + 0) ;else local v222=0 + 0 ;local v223;local v224;local v225;local v226;while true do if (((0 + 0)==v222) or ((4816 -(245 + 665))<(377 + 285))) then v223=(0 -0) + 0 ;v224=nil;v222=1 + (1233 -(259 + 974)) ;end if ((v222==(5 -(1871 -(338 + 1530)))) or ((1676 -1232)>=(2459 + 1546))) then while true do if (((415 + 519)<=(825 + 860)) and (v223==(1 + 0))) then v226=nil;while true do if (((2327 -(189 + 668))==(459 + 1011)) and (v224==(0 -0))) then local v340=783 -(358 + 28 + 397) ;local v341;while true do if (((2339 + 1140)>((94 + 114) -(47 + 4))) and (v340==(0 -(83 -(47 + 36))))) then v341=0 -0 ;while true do if (((10817 -7848)<=(13754 -10625)) and (v341==(1 + 0))) then v224=1 + 0 ;break;end if ((v341==(0 -0)) or ((2941 + 844)==(1595 -1129))) then v225=v100[1180 -(361 + 817) ];v226={};v341=1801 -(757 + 1043) ;end end break;end end end if (((2173 -1109)<=(2285 + 1766)) and (((847 -(205 + 640)) -1)==v224)) then for v364=3 -2 , #v97 do local v365=0 + (0 -0) ;local v366;local v367;while true do if ((v365==(1 + 0)) or ((4360 -2390)>=(4790 -((663 -(512 + 66)) + 48)))) then while true do if (((3145 + 1680)>((1128 + 2036) -(177 + 536))) and ((0 + 0)==v366)) then v367=v97[v364];for v407=442 -(431 + 11) , #v367 do local v408=0 -0 ;local v409;local v410;local v411;local v412;while true do if ((v408==(732 -(160 + 571))) or ((6209 -3410)<(2428 -(132 + 12)))) then v411=nil;v412=nil;v408=2 + 0 ;end if (((13835 -9097)>=(55 + 824 + 3500)) and (v408==(1573 -(1350 + 221)))) then while true do if ((v409==(0 -0)) or ((3036 -(168 + 78))>=(3841 + 342))) then v410=v367[v407];v411=v410[1];v409=1 + 0 ;end if ((v409==(1 -0)) or ((560 + (4495 -1216))==(2520 -1135))) then v412=v410[2 + 0 ];if (((5180 -3783)<(431 + 3071)) and (v411==v98) and (v412>=v225)) then local v444=0 + 0 ;local v445;local v446;while true do if (((6394 -3161)>(8228 -5112)) and (v444==0)) then v445=0 -0 ;v446=nil;v444=1 + 0 ;end if ((((675 -(36 + 214)) + 137)==((1897 + 646) -1981)) and (v444==(1 -0))) then while true do if (((2007 + 1159)<(4824 -1642)) and (v445==(1055 -(994 + 61)))) then v446=0 + 0 ;while true do if ((v446==(0 + 0)) or ((12422 -9185)>=((7230 -(659 + 16)) -(145 + 1725)))) then v226[v412]=v411[v412];v410[1 + 0 ]=v226;break;end end break;end end break;end end end break;end end break;end if (((10376 -7517)>(1336 -482)) and (v408==(0 + 0))) then v409=1544 -(1126 + 418) ;v410=nil;v408=(12 -9) -2 ;end end end break;end end break;end if ((v365==(0 -0)) or ((1941 + 90)<=(2221 -(714 + 15)))) then local v379=0 -0 ;while true do if ((v379==(143 -(13 + 129))) or ((4587 -2469)>(3965 + 734))) then v365=1 + 0 ;break;end if (((3465 -(496 + 403))>((3167 -(355 + 111)) -(816 + 531))) and (v379==(1520 -(1044 + 476)))) then v366=0 -0 ;v367=nil;v379=1 + 0 + 0 ;end end end end end break;end end break;end if ((v223==(0 -0)) or (((27437 -19618) -5771)<=(1591 -827))) then local v297=0 -0 ;while true do if (((5774 -3547)>(1899 -(56 + 237))) and (v297==(0 -0))) then v224=(0 -0) + (986 -(139 + 847)) ;v225=nil;v297=1831 -((2085 -(542 + 566)) + 853) ;end if (((1682 + (1401 -525))>(1650 + 764)) and (v297==(1 + 0))) then v223=3 -2 ;break;end end end end break;end if ((v222==(1555 -((1882 -(38 + 326)) + 36))) or ((90 + 15)>(3937 -(772 + 136)))) then v225=nil;v226=nil;v222=55 -(22 + 31) ;end end end elseif ((((27 + 3259) -831)<=((6876 -5363) + 2754)) and (v101<=(72 -25))) then if ((v101<=((65 + 18) -(14 + 26))) or ((275 + 101)>(1956 -(193 + 414)))) then if ((v101<=(19 + 22)) or ((2749 -(93 + 203))>((5724 -3637) + 642))) then if ( not v98[v100[(12 -9) -1 ]] or ((13731 -9584)<=(550 -(1555 -(385 + 1023))))) then v82=v82 + (1370 -(879 + 490)) ;else v82=v100[11 -8 ];end elseif ((v101>(85 -43)) or ((83 + 151)>=(4078 -(123 + 702)))) then local v228=0 -0 ;local v229;local v230;local v231;while true do if (((190 + 27 + 944 + 222)<=(3410 + 591)) and ((0 + 0)==v228)) then v229=261 -(158 + 103) ;v230=nil;v228=1396 -(1338 + 57) ;end if (((3039 -1950)<=(52 + 1 + 2475)) and (v228==(1 -0))) then v231=nil;while true do if (((4379 -(1330 + 484))==((1386 -(423 + 182)) + (3706 -(1641 + 281)))) and (v229==(0 -0))) then local v298=0 -0 ;while true do if ((4727>((1935 -(1569 + 156)) + 1457)) and ((3 -(749 -(269 + 478)))==v298)) then v229=2 -1 ;break;end if ((v298==(0 + 0)) or (1983==(5851 -(819 + 365)))) then v230=0 -(1376 -(1280 + 96)) ;v231=nil;v298=1257 -(895 + 361) ;end end end if ((((18491 -12062) -4115)>=(3277 -(1351 + 566))) and ((3 -2)==v229)) then while true do if (((284 + 4180)>(8194 -5435)) and (v230==(0 + 0))) then v231=v100[9 -7 ];v98[v231]=v98[v231]();break;end end break;end end break;end end else local v232=873 -(627 + (395 -149)) ;local v233;local v234;local v235;while true do if (((10473 -5716)>(13346 -(15549 -5977))) and ((1634 -(763 + 871))==v232)) then v233=0 + (796 -(381 + 415)) ;v234=nil;v232=2 -1 ;end if ((v232==(3 -2)) or ((7366 -4389)==(4670 -1280))) then v235=nil;while true do if (((4461 + 217)>(2145 + 115)) and (v233==1)) then while true do if (((1144 + 102 + 300)<(446 + (8187 -5262))) and ((0 + 0)==v234)) then v235=v100[7 -5 ];do return v13(v98,v235,v235 + v100[3 + 0 ] );end break;end end break;end if ((v233==(0 + 0)) or ((2759 -(465 + 43 + 90))>=(13730 -9929))) then local v299=0 -0 ;while true do if ((v299==(714 -(307 + 407))) or (((4470 -(1693 + 206)) -(104 + 797))==(94 + 87 + 385))) then v234=479 -(337 + 142) ;v235=nil;v299=4 -(3 + 0) ;end if ((v299==(425 -(131 + 293))) or ((747 + (2959 -1875))==(1944 + 932))) then v233=1500 -(1142 + 172 + 185) ;break;end end end end break;end end end elseif ((v101<=45) or ((16775 -12667)<=(582 + 2348))) then if ((4613>(599 -320)) and (v101==(31 + 13))) then v98[v100[1820 -(1003 + 815) ]]();else local v236=853 -(412 + 441) ;local v237;local v238;local v239;local v240;local v241;while true do if ((v236==(4 -2)) or ((150 + 143)==(4172 -1987))) then v241=nil;while true do if (((4579 -((1746 -(1246 + 492)) + 1140))>=(2662 -(84 + 34))) and (v237==(0 -0))) then local v300=0 -0 ;while true do if (((4214 + 554)>=(788 + 2013)) and (v300==(0 -0))) then v238=v100[2 -0 ];v239,v240=v95(v98[v238](v13(v98,v238 + 1 + 0 ,v83)));v300=1670 -(1428 + 241) ;end if (((1907 + 352)<((27399 -21630) -(762 + (549 -334)))) and (v300==(1040 -(618 + 421)))) then v237=1 + 0 ;break;end end end if (((2 -(173 -(58 + 114)))==v237) or ((7308 -4009)==(1441 + (2158 -1607)))) then local v301=1696 -(604 + 1092) ;while true do if ((v301==(0 -0)) or (((5513 -3159) -(413 + (740 -500)))<=(25 + 1 + 1449))) then v83=(v240 + v238) -(3 -2) ;v241=0 + 0 + 0 ;v301=1 + 0 ;end if (((388 + 542)<=(507 + 2173)) and (v301==(283 -(8 + 274)))) then v237=380 -(163 + 215) ;break;end end end if ((((3174 -(78 + 1264)) -875)==(484 + 473)) and (v237==(3 -1))) then for v319=v238,v83 do local v320=(6329 -4539) -(1119 + (967 -(63 + 233))) ;local v321;while true do if ((v320==(0 -0)) or ((4214 -(219 + 836))<=(654 -365))) then v321=346 -(24 + 322) ;while true do if (((0 + 0)==v321) or ((3990 -(98 + 631))>=(5764 -(1434 + 424)))) then v241=v241 + 1 ;v98[v319]=v239[v241];break;end end break;end end end break;end end break;end if ((((4443 -(1685 + 216)) -(21 + (215 -162)))<(5045 -(1137 + 321))) and (v236==(0 + (373 -(65 + 308))))) then v237=0 -0 ;v238=nil;v236=1;end if (((3382 + 992)>=(1068 -(187 + 83))) and (v236==(1 -0))) then v239=nil;v240=nil;v236=1 + 1 ;end end end elseif (((2330 -(329 + (1190 -435)))==(2592 -(508 + 838))) and (v101==(42 + (8 -4)))) then v98[v100[2 + (581 -(113 + 468)) ]]= -v98[v100[1207 -(171 + (1523 -490)) ]];else v98[v100[1859 -(1526 + 331) ]][v100[2 + 1 ]]=v100[1 + 3 ];end elseif ((v101<=(148 -98)) or ((3017 + 19 + 1)>(2149 + 2552))) then if ((v101<=(892 -(350 + 494))) or ((1 + 0)>=(698 + 3039))) then v98[v100[(6743 -5176) -(741 + (1216 -392)) ]]=v98[v100[504 -(412 + 89) ]] + v100[1326 -(140 + 1182) ] ;elseif (((594 + 2525)>=(3359 -1498)) and (v101==(17 + 32))) then v98[v100[2 -0 ]]=v30(v93[v100[1 + 0 + 2 ]],nil,v63);elseif ((v98[v100[6 -4 ]]<v98[v100[15 -(6 + 5) ]]) or ((3985 -(398 + (1072 -(597 + 129))))==(4027 -(213 + 25)))) then v82=v82 + 1 + 0 ;else v82=v100[1026 -(528 + (1327 -(262 + 570))) ];end elseif ((v101<=(28 + 24)) or ((3050 + 260 + 24)<((7024 -(244 + 992)) -2686))) then if ((v101==(78 -27)) or ((415 + 957)>(4322 + 160))) then if ((((387 -172) + 60)==((1741 -1011) -455)) and (v98[v100[1 + 1 ]]~=v98[v100[1838 -((2489 -(909 + 987)) + 1241) ]])) then v82=v82 + (2 -1) ;else v82=v100[957 -(630 + 324) ];end else local v246=(285 + 276) -(266 + 295) ;local v247;local v248;while true do if (((5622 -2775)>((5562 -4233) + 1484)) and (v246==(0 -0))) then local v272=0 + 0 ;while true do if ((((1833 -675) + 101)<(5629 -(1578 + 208))) and (v272==(1 + 0))) then v246=313 -(251 + 61) ;break;end if (((2126 -857)<=(13250 -9621)) and (v272==(0 -0))) then v247=v100[1 + 2 ];v248=v98[v247];v272=1 + 0 ;end end end if ((v246==(990 -(478 + 511))) or ((3107 -2196)>=(11527 -7792))) then for v277=v247 + (1 -0) ,v100[(859 -(366 + 484)) -5 ] do v248=v248   .. v98[v277] ;end v98[v100[(1850 -(1303 + 545)) + 0 ]]=v248;break;end end end elseif ((v101>(73 -20)) or ((13088 -8171)<=(1194 -(186 + 279)))) then v98[v100[798 -(738 + 58) ]]=v98[v100[1664 -(184 + 1477) ]][v98[v100[3 + 1 + 0 ]]];else v98[v100[2 + 0 ]]=v62[v100[7 -4 ]];end v82=v82 + (1 -0) ;break;end end break;end end end end v81=3;end if (v81==3) then A,B=v28(v11(v86));if  not A[1] then local v105=v61[4][v82] or "?" ;error("Script error at ["   .. v105   .. "]:"   .. A[2] );else return v13(A,2,B);end break;end if (v81==0) then v82=1;v83= -1;v81=1;end if (v81==1) then v84={...};v85=v12("#",...) -1 ;v81=2;end end end;end end end return v30(v29(),{},v17)(...);end end end vv9(),...);end
